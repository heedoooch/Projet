{"ast":null,"code":"'use strict';\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/mac/Desktop/project/node_modules/react-native-modal-selector-searchable/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { ViewPropTypes as RNViewPropTypes } from \"react-native-web/dist/index\";\nimport styles from \"./style\";\nvar ViewPropTypes = RNViewPropTypes || View.propTypes;\nvar componentIndex = 0;\nvar propTypes = {\n  children: PropTypes.any,\n  data: PropTypes.array,\n  onSearchFilterer: PropTypes.func,\n  onChangeSearch: PropTypes.func,\n  onChange: PropTypes.func,\n  onModalOpen: PropTypes.func,\n  onModalClose: PropTypes.func,\n  keyExtractor: PropTypes.func,\n  labelExtractor: PropTypes.func,\n  componentExtractor: PropTypes.func,\n  visible: PropTypes.bool,\n  closeOnChange: PropTypes.bool,\n  initValue: PropTypes.string,\n  listType: PropTypes.oneOf(['SCROLLVIEW', 'FLATLIST']),\n  animationType: PropTypes.oneOf(['none', 'slide', 'fade']),\n  style: ViewPropTypes.style,\n  selectStyle: ViewPropTypes.style,\n  selectTextStyle: Text.propTypes.style,\n  optionStyle: ViewPropTypes.style,\n  optionTextStyle: Text.propTypes.style,\n  optionContainerStyle: ViewPropTypes.style,\n  sectionStyle: ViewPropTypes.style,\n  childrenContainerStyle: ViewPropTypes.style,\n  touchableStyle: ViewPropTypes.style,\n  touchableActiveOpacity: PropTypes.number,\n  sectionTextStyle: Text.propTypes.style,\n  selectedItemTextStyle: Text.propTypes.style,\n  cancelContainerStyle: ViewPropTypes.style,\n  cancelStyle: ViewPropTypes.style,\n  cancelTextStyle: Text.propTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  initValueTextStyle: Text.propTypes.style,\n  searchStyle: ViewPropTypes.style,\n  searchTextStyle: Text.propTypes.style,\n  cancelText: PropTypes.string,\n  disabled: PropTypes.bool,\n  supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf(['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'])),\n  keyboardShouldPersistTaps: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  backdropPressToClose: PropTypes.bool,\n  openButtonContainerAccessible: PropTypes.bool,\n  listItemAccessible: PropTypes.bool,\n  cancelButtonAccessible: PropTypes.bool,\n  scrollViewAccessible: PropTypes.bool,\n  scrollViewAccessibilityLabel: PropTypes.string,\n  cancelButtonAccessibilityLabel: PropTypes.string,\n  passThruProps: PropTypes.object,\n  selectTextPassThruProps: PropTypes.object,\n  optionTextPassThruProps: PropTypes.object,\n  cancelTextPassThruProps: PropTypes.object,\n  scrollViewPassThruProps: PropTypes.object,\n  modalOpenerHitSlop: PropTypes.object,\n  customSelector: PropTypes.node,\n  selectedKey: PropTypes.any,\n  enableShortPress: PropTypes.bool,\n  enableLongPress: PropTypes.bool,\n  optionsTestIDPrefix: PropTypes.string,\n  hideSectionOnSearch: PropTypes.bool,\n  caseSensitiveSearch: PropTypes.bool,\n  search: PropTypes.bool,\n  fullHeight: PropTypes.bool,\n  frozenSearch: PropTypes.bool\n};\nvar defaultProps = {\n  data: [],\n  onChange: function onChange() {},\n  onModalOpen: function onModalOpen() {},\n  onModalClose: function onModalClose() {},\n  searchFilterer: function searchFilterer(item) {\n    return item.component;\n  },\n  keyExtractor: function keyExtractor(item) {\n    return item.key;\n  },\n  labelExtractor: function labelExtractor(item) {\n    return item.label;\n  },\n  componentExtractor: function componentExtractor(item) {\n    return item.component;\n  },\n  listType: 'SCROLLVIEW',\n  visible: false,\n  closeOnChange: true,\n  initValue: 'Select me!',\n  animationType: 'slide',\n  style: {},\n  selectStyle: {},\n  selectTextStyle: {},\n  optionStyle: {},\n  optionTextStyle: {},\n  optionContainerStyle: {},\n  sectionStyle: {},\n  childrenContainerStyle: {},\n  touchableStyle: {},\n  touchableActiveOpacity: 0.2,\n  sectionTextStyle: {},\n  selectedItemTextStyle: {},\n  cancelContainerStyle: {},\n  cancelStyle: {},\n  cancelTextStyle: {},\n  overlayStyle: {},\n  initValueTextStyle: {},\n  cancelText: 'cancel',\n  disabled: false,\n  supportedOrientations: ['portrait', 'landscape'],\n  keyboardShouldPersistTaps: 'always',\n  backdropPressToClose: false,\n  openButtonContainerAccessible: false,\n  listItemAccessible: false,\n  cancelButtonAccessible: false,\n  scrollViewAccessible: false,\n  scrollViewAccessibilityLabel: \"\",\n  cancelButtonAccessibilityLabel: \"\",\n  passThruProps: {},\n  selectTextPassThruProps: {},\n  optionTextPassThruProps: {},\n  cancelTextPassThruProps: {},\n  scrollViewPassThruProps: {},\n  modalOpenerHitSlop: {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  customSelector: undefined,\n  selectedKey: '',\n  enableShortPress: true,\n  enableLongPress: false,\n  optionsTestIDPrefix: 'default',\n  searchStyle: {},\n  searchTextStyle: {},\n  hideSectionOnSearch: false,\n  caseSensitiveSearch: false,\n  search: true,\n  fullHeight: false,\n  frozenSearch: false\n};\n\nvar ModalSelector = function (_React$Component) {\n  _inherits(ModalSelector, _React$Component);\n\n  var _super = _createSuper(ModalSelector);\n\n  function ModalSelector(props) {\n    var _this;\n\n    _classCallCheck(this, ModalSelector);\n\n    _this = _super.call(this, props);\n\n    _this.validateSelectedKey = function (key) {\n      var selectedItem = _this.props.data.filter(function (item) {\n        return _this.props.keyExtractor(item) === key;\n      });\n\n      var selectedLabel = selectedItem.length > 0 ? _this.props.labelExtractor(selectedItem[0]) : _this.props.initValue;\n      var selectedKey = selectedItem.length > 0 ? key : undefined;\n      return {\n        label: selectedLabel,\n        key: selectedKey\n      };\n    };\n\n    _this.onChange = function (item) {\n      _this.props.onChange(item);\n\n      _this.setState({\n        selected: _this.props.labelExtractor(item),\n        changedItem: item\n      }, function () {\n        if (_this.props.closeOnChange) _this.close(item);\n      });\n    };\n\n    _this.close = function (item) {\n      _this.initialModalHeight = null;\n\n      _this.props.onModalClose(item);\n\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.open = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!params.longPress && !_this.props.enableShortPress) {\n        return;\n      }\n\n      if (params.longPress && !_this.props.enableLongPress) {\n        return;\n      }\n\n      _this.props.onModalOpen(params);\n\n      _this.setState({\n        modalVisible: true,\n        changedItem: undefined,\n        searchData: null\n      });\n    };\n\n    _this.renderSection = function (section) {\n      var optionComponent = _this.props.componentExtractor(section);\n\n      var component = optionComponent || React.createElement(Text, {\n        style: [styles.sectionTextStyle, _this.props.sectionTextStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, _this.props.labelExtractor(section));\n      return React.createElement(View, {\n        key: _this.props.keyExtractor(section),\n        style: [styles.sectionStyle, _this.props.sectionStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }, component);\n    };\n\n    _this.renderOption = function (option, isLastItem, isFirstItem) {\n      var optionComponent = _this.props.componentExtractor(option);\n\n      var optionLabel = _this.props.labelExtractor(option);\n\n      var isSelectedItem = optionLabel === _this.state.selected;\n      var component = optionComponent || React.createElement(Text, _extends({\n        style: [styles.optionTextStyle, _this.props.optionTextStyle, isSelectedItem && _this.props.selectedItemTextStyle]\n      }, _this.props.optionTextPassThruProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }\n      }), optionLabel);\n      return React.createElement(TouchableOpacity, _extends({\n        key: _this.props.keyExtractor(option),\n        testID: option.testID || _this.props.optionsTestIDPrefix + '-' + optionLabel,\n        onPress: function onPress() {\n          return _this.onChange(option);\n        },\n        activeOpacity: _this.props.touchableActiveOpacity,\n        accessible: _this.props.listItemAccessible,\n        accessibilityLabel: option.accessibilityLabel || undefined,\n        importantForAccessibility: isFirstItem ? 'yes' : 'no'\n      }, _this.props.passThruProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: [styles.optionStyle, _this.props.optionStyle, isLastItem && {\n          borderBottomWidth: 0\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }\n      }, component));\n    };\n\n    _this.renderFlatlistOption = function (filteredData) {\n      return function (_ref) {\n        var item = _ref.item,\n            index = _ref.index,\n            separators = _ref.separators;\n\n        if (item.section) {\n          return _this.renderSection(item);\n        }\n\n        var numItems = filteredData.length;\n        return _this.renderOption(item, index === numItems - 1, index === 0);\n      };\n    };\n\n    _this.onChangeSearch = function (text) {\n      var onChangeSearch = _this.props.onChangeSearch;\n\n      if (onChangeSearch) {\n        onChangeSearch(text);\n      }\n\n      _this.setState({\n        searchData: text\n      });\n    };\n\n    _this.onSearchFilterer = function (data) {\n      var _this$props = _this.props,\n          onSearchFilterer = _this$props.onSearchFilterer,\n          hideSectionOnSearch = _this$props.hideSectionOnSearch,\n          caseSensitiveSearch = _this$props.caseSensitiveSearch;\n      var searchData = _this.state.searchData;\n      if (onSearchFilterer) return onSearchFilterer(searchData, data);\n      if (!searchData) return data;\n\n      var arr = _toConsumableArray(data).reverse();\n\n      var searchDataStr = searchData || \"\";\n\n      if (!caseSensitiveSearch) {\n        searchDataStr = searchDataStr.toLowerCase();\n      }\n\n      var showSectionMatched = false;\n      var filtered = arr.filter(function (item) {\n        var labelDataStr = _this.props.labelExtractor(item) || \"\";\n\n        if (!caseSensitiveSearch) {\n          labelDataStr = labelDataStr.toLowerCase();\n        }\n\n        var result = labelDataStr.indexOf(searchDataStr) > -1 || !searchDataStr || item.section && showSectionMatched && !hideSectionOnSearch;\n\n        if (result) {\n          showSectionMatched = true;\n        }\n\n        if (item.section) {\n          showSectionMatched = false;\n        }\n\n        return result;\n      });\n      return filtered.reverse();\n    };\n\n    _this.renderOptionList = function () {\n      var _this$props2 = _this.props,\n          data = _this$props2.data,\n          listType = _this$props2.listType,\n          backdropPressToClose = _this$props2.backdropPressToClose,\n          scrollViewPassThruProps = _this$props2.scrollViewPassThruProps,\n          overlayStyle = _this$props2.overlayStyle,\n          optionContainerStyle = _this$props2.optionContainerStyle,\n          keyboardShouldPersistTaps = _this$props2.keyboardShouldPersistTaps,\n          scrollViewAccessible = _this$props2.scrollViewAccessible,\n          scrollViewAccessibilityLabel = _this$props2.scrollViewAccessibilityLabel,\n          cancelContainerStyle = _this$props2.cancelContainerStyle,\n          touchableActiveOpacity = _this$props2.touchableActiveOpacity,\n          cancelButtonAccessible = _this$props2.cancelButtonAccessible,\n          cancelButtonAccessibilityLabel = _this$props2.cancelButtonAccessibilityLabel,\n          cancelStyle = _this$props2.cancelStyle,\n          cancelTextStyle = _this$props2.cancelTextStyle,\n          cancelText = _this$props2.cancelText,\n          search = _this$props2.search,\n          searchStyle = _this$props2.searchStyle,\n          searchTextStyle = _this$props2.searchTextStyle,\n          fullHeight = _this$props2.fullHeight,\n          frozenSearch = _this$props2.frozenSearch;\n\n      var filteredData = _this.onSearchFilterer(data);\n\n      var options = filteredData.map(function (item, index) {\n        if (item.section) {\n          return _this.renderSection(item);\n        }\n\n        return _this.renderOption(item, index === filteredData.length - 1, index === 0);\n      });\n      var Overlay = View;\n      var overlayProps = {\n        style: {\n          flex: 1\n        }\n      };\n\n      if (backdropPressToClose) {\n        Overlay = TouchableWithoutFeedback;\n        overlayProps = {\n          key: \"modalSelector\" + componentIndex++,\n          accessible: false,\n          onPress: _this.close\n        };\n      }\n\n      var optionsContainerStyle = {\n        paddingHorizontal: 10\n      };\n\n      if (scrollViewPassThruProps && scrollViewPassThruProps.horizontal) {\n        optionsContainerStyle.flexDirection = 'row';\n      }\n\n      return React.createElement(Overlay, _extends({}, overlayProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: [styles.overlayStyle, overlayStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: [styles.optionContainer, frozenSearch && {\n          height: _this.initialModalHeight\n        }, fullHeight && {\n          height: \"100%\"\n        }, optionContainerStyle],\n        onLayout: function onLayout(event) {\n          return _this.initialModalHeight = _this.initialModalHeight || event.nativeEvent.layout.height;\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }\n      }, search && React.createElement(View, {\n        style: [styles.searchStyle, searchStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 29\n        }\n      }, React.createElement(TextInput, {\n        style: searchTextStyle,\n        placeholder: \"Search\",\n        onChangeText: _this.onChangeSearch,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 33\n        }\n      })), listType === 'FLATLIST' ? React.createElement(FlatList, {\n        data: filteredData,\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        accessible: scrollViewAccessible,\n        accessibilityLabel: scrollViewAccessibilityLabel,\n        keyExtractor: _this.props.keyExtractor,\n        renderItem: _this.renderFlatlistOption(filteredData),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 29\n        }\n      }) : React.createElement(ScrollView, _extends({\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        accessible: scrollViewAccessible,\n        accessibilityLabel: scrollViewAccessibilityLabel\n      }, scrollViewPassThruProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 29\n        }\n      }), React.createElement(View, {\n        style: optionsContainerStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 33\n        }\n      }, options))), React.createElement(View, {\n        style: [styles.cancelContainer, cancelContainerStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: _this.close,\n        activeOpacity: touchableActiveOpacity,\n        accessible: cancelButtonAccessible,\n        accessibilityLabel: cancelButtonAccessibilityLabel,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: [styles.cancelStyle, cancelStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, _extends({\n        style: [styles.cancelTextStyle, cancelTextStyle]\n      }, _this.props.cancelTextPassThruProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 33\n        }\n      }), cancelText))))));\n    };\n\n    _this.renderChildren = function () {\n      if (_this.props.children) {\n        return _this.props.children;\n      }\n\n      var initSelectStyle = _this.props.initValue === _this.state.selected ? [styles.initValueTextStyle, _this.props.initValueTextStyle] : [styles.selectTextStyle, _this.props.selectTextStyle];\n      return React.createElement(View, {\n        style: [styles.selectStyle, _this.props.selectStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, _extends({\n        style: initSelectStyle\n      }, _this.props.selectTextPassThruProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 17\n        }\n      }), _this.state.selected));\n    };\n\n    var _selectedItem = _this.validateSelectedKey(props.selectedKey);\n\n    _this.state = {\n      modalVisible: props.visible,\n      selected: _selectedItem.label,\n      cancelText: props.cancelText,\n      changedItem: _selectedItem.key,\n      searchData: null\n    };\n    _this.initialModalHeight = null;\n    return _this;\n  }\n\n  _createClass(ModalSelector, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var newState = {};\n      var doUpdate = false;\n\n      if (prevProps.initValue !== this.props.initValue) {\n        newState.selected = this.props.initValue;\n        doUpdate = true;\n      }\n\n      if (prevProps.visible !== this.props.visible) {\n        newState.modalVisible = this.props.visible;\n        doUpdate = true;\n      }\n\n      if (prevProps.selectedKey !== this.props.selectedKey || prevProps.data !== this.props.data) {\n        var selectedItem = this.validateSelectedKey(this.props.selectedKey);\n        newState.selected = selectedItem.label;\n        newState.changedItem = selectedItem.key;\n        doUpdate = true;\n      }\n\n      if (doUpdate) {\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"getSelectedItem\",\n    value: function getSelectedItem() {\n      return this.state.changedItem;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dp = React.createElement(Modal, {\n        transparent: true,\n        ref: function ref(element) {\n          return _this2.model = element;\n        },\n        supportedOrientations: this.props.supportedOrientations,\n        visible: this.state.modalVisible,\n        onRequestClose: this.close,\n        animationType: this.props.animationType,\n        onDismiss: function onDismiss() {\n          return _this2.state.changedItem && _this2.props.onChange(_this2.state.changedItem);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }\n      }, this.renderOptionList());\n      return React.createElement(View, _extends({\n        style: this.props.style\n      }, this.props.passThruProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }\n      }), dp, this.props.customSelector ? this.props.customSelector : React.createElement(TouchableOpacity, {\n        hitSlop: this.props.modalOpenerHitSlop,\n        activeOpacity: this.props.touchableActiveOpacity,\n        style: this.props.touchableStyle,\n        onPress: this.open,\n        onLongPress: function onLongPress() {\n          return _this2.open({\n            longPress: true\n          });\n        },\n        disabled: this.props.disabled,\n        accessible: this.props.openButtonContainerAccessible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: this.props.childrenContainerStyle,\n        pointerEvents: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 25\n        }\n      }, this.renderChildren())));\n    }\n  }]);\n\n  return ModalSelector;\n}(React.Component);\n\nexport { ModalSelector as default };\nModalSelector.propTypes = propTypes;\nModalSelector.defaultProps = defaultProps;","map":{"version":3,"sources":["/Users/mac/Desktop/project/node_modules/react-native-modal-selector-searchable/index.js"],"names":["React","PropTypes","ViewPropTypes","RNViewPropTypes","styles","View","propTypes","componentIndex","children","any","data","array","onSearchFilterer","func","onChangeSearch","onChange","onModalOpen","onModalClose","keyExtractor","labelExtractor","componentExtractor","visible","bool","closeOnChange","initValue","string","listType","oneOf","animationType","style","selectStyle","selectTextStyle","Text","optionStyle","optionTextStyle","optionContainerStyle","sectionStyle","childrenContainerStyle","touchableStyle","touchableActiveOpacity","number","sectionTextStyle","selectedItemTextStyle","cancelContainerStyle","cancelStyle","cancelTextStyle","overlayStyle","initValueTextStyle","searchStyle","searchTextStyle","cancelText","disabled","supportedOrientations","arrayOf","keyboardShouldPersistTaps","oneOfType","backdropPressToClose","openButtonContainerAccessible","listItemAccessible","cancelButtonAccessible","scrollViewAccessible","scrollViewAccessibilityLabel","cancelButtonAccessibilityLabel","passThruProps","object","selectTextPassThruProps","optionTextPassThruProps","cancelTextPassThruProps","scrollViewPassThruProps","modalOpenerHitSlop","customSelector","node","selectedKey","enableShortPress","enableLongPress","optionsTestIDPrefix","hideSectionOnSearch","caseSensitiveSearch","search","fullHeight","frozenSearch","defaultProps","searchFilterer","item","component","key","label","top","bottom","left","right","undefined","ModalSelector","props","validateSelectedKey","selectedItem","filter","selectedLabel","length","setState","selected","changedItem","close","initialModalHeight","modalVisible","open","params","longPress","searchData","renderSection","section","optionComponent","renderOption","option","isLastItem","isFirstItem","optionLabel","isSelectedItem","state","testID","accessibilityLabel","borderBottomWidth","renderFlatlistOption","filteredData","index","separators","numItems","text","arr","reverse","searchDataStr","toLowerCase","showSectionMatched","filtered","labelDataStr","result","indexOf","renderOptionList","options","map","Overlay","overlayProps","flex","TouchableWithoutFeedback","accessible","onPress","optionsContainerStyle","paddingHorizontal","horizontal","flexDirection","optionContainer","height","event","nativeEvent","layout","cancelContainer","renderChildren","initSelectStyle","prevProps","prevState","newState","doUpdate","dp","element","model","Component"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    View,\r\n    Modal,\r\n    Text,\r\n    TextInput,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    ViewPropTypes as RNViewPropTypes,\r\n} from 'react-native';\r\n\r\nimport styles from './style';\r\n\r\nconst ViewPropTypes = RNViewPropTypes || View.propTypes;\r\n\r\nlet componentIndex = 0;\r\n\r\nconst propTypes = {\r\n    children: PropTypes.any,\r\n    data: PropTypes.array,\r\n    onSearchFilterer: PropTypes.func,\r\n    onChangeSearch: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onModalOpen: PropTypes.func,\r\n    onModalClose: PropTypes.func,\r\n    keyExtractor: PropTypes.func,\r\n    labelExtractor: PropTypes.func,\r\n    componentExtractor: PropTypes.func,\r\n    visible: PropTypes.bool,\r\n    closeOnChange: PropTypes.bool,\r\n    initValue: PropTypes.string,\r\n    listType: PropTypes.oneOf(['SCROLLVIEW', 'FLATLIST']),\r\n    animationType: PropTypes.oneOf(['none', 'slide', 'fade']),\r\n    style: ViewPropTypes.style,\r\n    selectStyle: ViewPropTypes.style,\r\n    selectTextStyle: Text.propTypes.style,\r\n    optionStyle: ViewPropTypes.style,\r\n    optionTextStyle: Text.propTypes.style,\r\n    optionContainerStyle: ViewPropTypes.style,\r\n    sectionStyle: ViewPropTypes.style,\r\n    childrenContainerStyle: ViewPropTypes.style,\r\n    touchableStyle: ViewPropTypes.style,\r\n    touchableActiveOpacity: PropTypes.number,\r\n    sectionTextStyle: Text.propTypes.style,\r\n    selectedItemTextStyle: Text.propTypes.style,\r\n    cancelContainerStyle: ViewPropTypes.style,\r\n    cancelStyle: ViewPropTypes.style,\r\n    cancelTextStyle: Text.propTypes.style,\r\n    overlayStyle: ViewPropTypes.style,\r\n    initValueTextStyle: Text.propTypes.style,\r\n    searchStyle: ViewPropTypes.style,\r\n    searchTextStyle: Text.propTypes.style,\r\n    cancelText: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    supportedOrientations: PropTypes.arrayOf(\r\n        PropTypes.oneOf([\r\n            'portrait',\r\n            'portrait-upside-down',\r\n            'landscape',\r\n            'landscape-left',\r\n            'landscape-right',\r\n        ]),\r\n    ),\r\n    keyboardShouldPersistTaps: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n    backdropPressToClose: PropTypes.bool,\r\n    openButtonContainerAccessible: PropTypes.bool,\r\n    listItemAccessible: PropTypes.bool,\r\n    cancelButtonAccessible: PropTypes.bool,\r\n    scrollViewAccessible: PropTypes.bool,\r\n    scrollViewAccessibilityLabel: PropTypes.string,\r\n    cancelButtonAccessibilityLabel: PropTypes.string,\r\n    passThruProps: PropTypes.object,\r\n    selectTextPassThruProps: PropTypes.object,\r\n    optionTextPassThruProps: PropTypes.object,\r\n    cancelTextPassThruProps: PropTypes.object,\r\n    scrollViewPassThruProps: PropTypes.object,\r\n    modalOpenerHitSlop: PropTypes.object,\r\n    customSelector: PropTypes.node,\r\n    selectedKey: PropTypes.any,\r\n    enableShortPress: PropTypes.bool,\r\n    enableLongPress: PropTypes.bool,\r\n    optionsTestIDPrefix: PropTypes.string,\r\n    hideSectionOnSearch: PropTypes.bool,\r\n    caseSensitiveSearch: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    fullHeight: PropTypes.bool,\r\n    frozenSearch: PropTypes.bool,\r\n};\r\n\r\n\r\nconst defaultProps = {\r\n    data: [],\r\n    onChange: () => { },\r\n    onModalOpen: () => { },\r\n    onModalClose: () => { },\r\n    searchFilterer: (item) => item.component,\r\n    keyExtractor: (item) => item.key,\r\n    labelExtractor: (item) => item.label,\r\n    componentExtractor: (item) => item.component,\r\n    listType: 'SCROLLVIEW',\r\n    visible: false,\r\n    closeOnChange: true,\r\n    initValue: 'Select me!',\r\n    animationType: 'slide',\r\n    style: {},\r\n    selectStyle: {},\r\n    selectTextStyle: {},\r\n    optionStyle: {},\r\n    optionTextStyle: {},\r\n    optionContainerStyle: {},\r\n    sectionStyle: {},\r\n    childrenContainerStyle: {},\r\n    touchableStyle: {},\r\n    touchableActiveOpacity: 0.2,\r\n    sectionTextStyle: {},\r\n    selectedItemTextStyle: {},\r\n    cancelContainerStyle: {},\r\n    cancelStyle: {},\r\n    cancelTextStyle: {},\r\n    overlayStyle: {},\r\n    initValueTextStyle: {},\r\n    cancelText: 'cancel',\r\n    disabled: false,\r\n    supportedOrientations: ['portrait', 'landscape'],\r\n    keyboardShouldPersistTaps: 'always',\r\n    backdropPressToClose: false,\r\n    openButtonContainerAccessible: false,\r\n    listItemAccessible: false,\r\n    cancelButtonAccessible: false,\r\n    scrollViewAccessible: false,\r\n    scrollViewAccessibilityLabel: \"\",\r\n    cancelButtonAccessibilityLabel: \"\",\r\n    passThruProps: {},\r\n    selectTextPassThruProps: {},\r\n    optionTextPassThruProps: {},\r\n    cancelTextPassThruProps: {},\r\n    scrollViewPassThruProps: {},\r\n    modalOpenerHitSlop: { top: 0, bottom: 0, left: 0, right: 0 },\r\n    customSelector: undefined,\r\n    selectedKey: '',\r\n    enableShortPress: true,\r\n    enableLongPress: false,\r\n    optionsTestIDPrefix: 'default',\r\n    searchStyle: {},\r\n    searchTextStyle: {},\r\n    hideSectionOnSearch: false,\r\n    caseSensitiveSearch: false,\r\n    search: true,\r\n    fullHeight: false,\r\n    frozenSearch: false,\r\n};\r\n\r\nexport default class ModalSelector extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let selectedItem = this.validateSelectedKey(props.selectedKey);\r\n        this.state = {\r\n            modalVisible: props.visible,\r\n            selected: selectedItem.label,\r\n            cancelText: props.cancelText,\r\n            changedItem: selectedItem.key,\r\n            searchData: null,\r\n        };\r\n        this.initialModalHeight = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let newState = {};\r\n        let doUpdate = false;\r\n        if (prevProps.initValue !== this.props.initValue) {\r\n            newState.selected = this.props.initValue;\r\n            doUpdate = true;\r\n        }\r\n        if (prevProps.visible !== this.props.visible) {\r\n            newState.modalVisible = this.props.visible;\r\n            doUpdate = true;\r\n        }\r\n        if (prevProps.selectedKey !== this.props.selectedKey || prevProps.data !== this.props.data) {\r\n            let selectedItem = this.validateSelectedKey(this.props.selectedKey);\r\n            newState.selected = selectedItem.label;\r\n            newState.changedItem = selectedItem.key;\r\n            doUpdate = true;\r\n        }\r\n        if (doUpdate) {\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    validateSelectedKey = (key) => {\r\n        let selectedItem = this.props.data.filter((item) => this.props.keyExtractor(item) === key);\r\n        let selectedLabel = selectedItem.length > 0 ? this.props.labelExtractor(selectedItem[0]) : this.props.initValue;\r\n        let selectedKey = selectedItem.length > 0 ? key : undefined;\r\n        return { label: selectedLabel, key: selectedKey }\r\n    }\r\n\r\n    onChange = (item) => {\r\n        this.props.onChange(item);\r\n        this.setState({ selected: this.props.labelExtractor(item), changedItem: item }, () => {\r\n            if (this.props.closeOnChange)\r\n                this.close(item);\r\n        });\r\n    }\r\n\r\n    getSelectedItem() {\r\n        return this.state.changedItem;\r\n    }\r\n\r\n    close = (item) => {\r\n        this.initialModalHeight = null;\r\n        this.props.onModalClose(item);\r\n        this.setState({\r\n            modalVisible: false,\r\n        });\r\n    }\r\n\r\n    open = (params = {}) => {\r\n        if (!params.longPress && !this.props.enableShortPress) {\r\n            return;\r\n        }\r\n        if (params.longPress && !this.props.enableLongPress) {\r\n            return;\r\n        }\r\n        this.props.onModalOpen(params);\r\n        this.setState({\r\n            modalVisible: true,\r\n            changedItem: undefined,\r\n            searchData: null,\r\n        });\r\n    }\r\n\r\n    renderSection = (section) => {\r\n        const optionComponent = this.props.componentExtractor(section);\r\n        let component = optionComponent || (\r\n            <Text style={[styles.sectionTextStyle, this.props.sectionTextStyle]}>{this.props.labelExtractor(section)}</Text>\r\n        );\r\n\r\n        return (\r\n            <View key={this.props.keyExtractor(section)} style={[styles.sectionStyle, this.props.sectionStyle]}>\r\n                {component}\r\n            </View>\r\n        );\r\n    }\r\n\r\n    renderOption = (option, isLastItem, isFirstItem) => {\r\n        const optionComponent = this.props.componentExtractor(option);\r\n        const optionLabel = this.props.labelExtractor(option);\r\n        const isSelectedItem = optionLabel === this.state.selected;\r\n\r\n        let component = optionComponent || (\r\n            <Text style={[styles.optionTextStyle, this.props.optionTextStyle, isSelectedItem && this.props.selectedItemTextStyle]} {...this.props.optionTextPassThruProps}>\r\n                {optionLabel}\r\n            </Text>\r\n        );\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                key={this.props.keyExtractor(option)}\r\n                testID={option.testID || this.props.optionsTestIDPrefix + '-' + optionLabel}\r\n                onPress={() => this.onChange(option)}\r\n                activeOpacity={this.props.touchableActiveOpacity}\r\n                accessible={this.props.listItemAccessible}\r\n                accessibilityLabel={option.accessibilityLabel || undefined}\r\n                importantForAccessibility={isFirstItem ? 'yes' : 'no'}\r\n                {...this.props.passThruProps}\r\n            >\r\n                <View style={[styles.optionStyle, this.props.optionStyle, isLastItem && { borderBottomWidth: 0 }]}>\r\n                    {component}\r\n                </View>\r\n            </TouchableOpacity>);\r\n    }\r\n\r\n    renderFlatlistOption = (filteredData) => ({ item, index, separators }) => {\r\n        if (item.section) {\r\n            return this.renderSection(item);\r\n        }\r\n        const numItems = filteredData.length;\r\n        return this.renderOption(item, index === (numItems - 1), index === 0);\r\n    }\r\n\r\n    onChangeSearch = (text) => {\r\n        const { onChangeSearch } = this.props;\r\n        if (onChangeSearch) {\r\n            onChangeSearch(text);\r\n        }\r\n        this.setState({ searchData: text });\r\n    }\r\n\r\n\r\n\r\n    onSearchFilterer = (data) => {\r\n        const { onSearchFilterer, hideSectionOnSearch, caseSensitiveSearch } = this.props;\r\n        const { searchData } = this.state;\r\n        if (onSearchFilterer) return onSearchFilterer(searchData, data);\r\n        if (!searchData) return data;\r\n\r\n        let arr = [...data].reverse();\r\n        let searchDataStr = (searchData || \"\")\r\n\r\n        if (!caseSensitiveSearch) {\r\n            searchDataStr = searchDataStr.toLowerCase();\r\n        }\r\n\r\n        let showSectionMatched = false;\r\n        let filtered = arr.filter(item => {\r\n\r\n            let labelDataStr = (this.props.labelExtractor(item) || \"\");\r\n            if (!caseSensitiveSearch) {\r\n                labelDataStr = labelDataStr.toLowerCase();\r\n            }\r\n            let result = labelDataStr.indexOf(searchDataStr) > -1 || !searchDataStr || (item.section && showSectionMatched && !hideSectionOnSearch);\r\n            if (result) {\r\n                showSectionMatched = true;\r\n            }\r\n            if (item.section) {\r\n                showSectionMatched = false;\r\n            }\r\n            return result;\r\n        })\r\n        return filtered.reverse();\r\n    }\r\n\r\n    renderOptionList = () => {\r\n        const {\r\n            data,\r\n            listType,\r\n            backdropPressToClose,\r\n            scrollViewPassThruProps,\r\n            overlayStyle,\r\n            optionContainerStyle,\r\n            keyboardShouldPersistTaps,\r\n            scrollViewAccessible,\r\n            scrollViewAccessibilityLabel,\r\n            cancelContainerStyle,\r\n            touchableActiveOpacity,\r\n            cancelButtonAccessible,\r\n            cancelButtonAccessibilityLabel,\r\n            cancelStyle,\r\n            cancelTextStyle,\r\n            cancelText,\r\n            search,\r\n            searchStyle,\r\n            searchTextStyle,\r\n            fullHeight,\r\n            frozenSearch,\r\n        } = this.props;\r\n\r\n        const filteredData = this.onSearchFilterer(data);\r\n\r\n        let options = filteredData.map((item, index) => {\r\n            if (item.section) {\r\n                return this.renderSection(item);\r\n            }\r\n            return this.renderOption(item, index === filteredData.length - 1, index === 0);\r\n        });\r\n\r\n        let Overlay = View;\r\n        let overlayProps = {\r\n            style: { flex: 1 },\r\n        };\r\n        // Some RN versions have a bug here, so making the property opt-in works around this problem\r\n        if (backdropPressToClose) {\r\n            Overlay = TouchableWithoutFeedback;\r\n            overlayProps = {\r\n                key: `modalSelector${componentIndex++}`,\r\n                accessible: false,\r\n                onPress: this.close,\r\n            };\r\n        }\r\n\r\n        const optionsContainerStyle = { paddingHorizontal: 10 };\r\n        if (scrollViewPassThruProps && scrollViewPassThruProps.horizontal) {\r\n            optionsContainerStyle.flexDirection = 'row';\r\n        }\r\n\r\n        return (\r\n            <Overlay {...overlayProps}>\r\n                <View style={[styles.overlayStyle, overlayStyle]}>\r\n                    <View\r\n                        style={[\r\n                            styles.optionContainer,\r\n                            frozenSearch && { height: this.initialModalHeight },\r\n                            fullHeight && { height: \"100%\" },\r\n                            optionContainerStyle,\r\n                        ]}\r\n                        onLayout={(event) => this.initialModalHeight = this.initialModalHeight || event.nativeEvent.layout.height}\r\n                    >\r\n                        {search &&\r\n                            <View style={[styles.searchStyle, searchStyle]}>\r\n                                <TextInput style={searchTextStyle} placeholder=\"Search\" onChangeText={this.onChangeSearch} />\r\n                            </View>\r\n                        }\r\n\r\n                        {listType === 'FLATLIST' ?\r\n                            <FlatList\r\n                                data={filteredData}\r\n                                keyboardShouldPersistTaps={keyboardShouldPersistTaps}\r\n                                accessible={scrollViewAccessible}\r\n                                accessibilityLabel={scrollViewAccessibilityLabel}\r\n                                keyExtractor={this.props.keyExtractor}\r\n                                renderItem={this.renderFlatlistOption(filteredData)}\r\n                            />\r\n                            :\r\n                            <ScrollView\r\n                                keyboardShouldPersistTaps={keyboardShouldPersistTaps}\r\n                                accessible={scrollViewAccessible}\r\n                                accessibilityLabel={scrollViewAccessibilityLabel}\r\n                                {...scrollViewPassThruProps}\r\n                            >\r\n                                <View style={optionsContainerStyle}>\r\n                                    {options}\r\n                                </View>\r\n                            </ScrollView>\r\n                        }\r\n                    </View>\r\n                    <View style={[styles.cancelContainer, cancelContainerStyle]}>\r\n                        <TouchableOpacity onPress={this.close} activeOpacity={touchableActiveOpacity} accessible={cancelButtonAccessible} accessibilityLabel={cancelButtonAccessibilityLabel}>\r\n                            <View style={[styles.cancelStyle, cancelStyle]}>\r\n                                <Text style={[styles.cancelTextStyle, cancelTextStyle]} {...this.props.cancelTextPassThruProps}>{cancelText}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Overlay>\r\n        );\r\n    }\r\n\r\n    renderChildren = () => {\r\n\r\n        if (this.props.children) {\r\n            return this.props.children;\r\n        }\r\n        let initSelectStyle = this.props.initValue === this.state.selected ?\r\n            [styles.initValueTextStyle, this.props.initValueTextStyle] : [styles.selectTextStyle, this.props.selectTextStyle];\r\n        return (\r\n            <View style={[styles.selectStyle, this.props.selectStyle]}>\r\n                <Text style={initSelectStyle} {...this.props.selectTextPassThruProps}>{this.state.selected}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const dp = (\r\n            <Modal\r\n                transparent={true}\r\n                ref={element => this.model = element}\r\n                supportedOrientations={this.props.supportedOrientations}\r\n                visible={this.state.modalVisible}\r\n                onRequestClose={this.close}\r\n                animationType={this.props.animationType}\r\n                onDismiss={() => this.state.changedItem && this.props.onChange(this.state.changedItem)}\r\n            >\r\n                {this.renderOptionList()}\r\n            </Modal>\r\n        );\r\n\r\n        return (\r\n            <View style={this.props.style} {...this.props.passThruProps}>\r\n                {dp}\r\n                {this.props.customSelector ?\r\n                    this.props.customSelector\r\n                    :\r\n                    <TouchableOpacity\r\n                        hitSlop={this.props.modalOpenerHitSlop}\r\n                        activeOpacity={this.props.touchableActiveOpacity}\r\n                        style={this.props.touchableStyle}\r\n                        onPress={this.open}\r\n                        onLongPress={() => this.open({ longPress: true })}\r\n                        disabled={this.props.disabled}\r\n                        accessible={this.props.openButtonContainerAccessible}\r\n                    >\r\n                        <View style={this.props.childrenContainerStyle} pointerEvents=\"none\">\r\n                            {this.renderChildren()}\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nModalSelector.propTypes = propTypes;\r\nModalSelector.defaultProps = defaultProps;\r\n"]},"metadata":{},"sourceType":"module"}